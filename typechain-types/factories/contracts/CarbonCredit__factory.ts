/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CarbonCredit,
  CarbonCreditInterface,
} from "../../contracts/CarbonCredit";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b50336040518060400160405280601581526020017f45636f53796e6320436172626f6e2043726564697400000000000000000000008152506040518060400160405280600481526020017f455343430000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000456565b508060049081620000a1919062000456565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000117575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200010e91906200057d565b60405180910390fd5b62000128816200012f60201b60201c565b5062000598565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200026e57607f821691505b60208210810362000284576200028362000229565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ab565b620002f48683620002ab565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200033e6200033862000332846200030c565b62000315565b6200030c565b9050919050565b5f819050919050565b62000359836200031e565b62000371620003688262000345565b848454620002b7565b825550505050565b5f90565b6200038762000379565b620003948184846200034e565b505050565b5b81811015620003bb57620003af5f826200037d565b6001810190506200039a565b5050565b601f8211156200040a57620003d4816200028a565b620003df846200029c565b81016020851015620003ef578190505b62000407620003fe856200029c565b83018262000399565b50505b505050565b5f82821c905092915050565b5f6200042c5f19846008026200040f565b1980831691505092915050565b5f6200044683836200041b565b9150826002028217905092915050565b6200046182620001f2565b67ffffffffffffffff8111156200047d576200047c620001fc565b5b62000489825462000256565b62000496828285620003bf565b5f60209050601f831160018114620004cc575f8415620004b7578287015190505b620004c3858262000439565b86555062000532565b601f198416620004dc866200028a565b5f5b828110156200050557848901518255600182019150602085019450602081019050620004de565b8683101562000525578489015162000521601f8916826200041b565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000565826200053a565b9050919050565b620005778162000559565b82525050565b5f602082019050620005925f8301846200056c565b92915050565b61122480620005a65f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b4114610236578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b806370a08231146101de578063715018a61461020e5780638da5cb5b14610218576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806340c10f19146101a657806342966c68146101c2576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102d0565b6040516101019190610e72565b60405180910390f35b610124600480360381019061011f9190610f23565b610360565b6040516101319190610f7b565b60405180910390f35b610142610382565b60405161014f9190610fa3565b60405180910390f35b610172600480360381019061016d9190610fbc565b61038b565b60405161017f9190610f7b565b60405180910390f35b6101906103b9565b60405161019d9190611027565b60405180910390f35b6101c060048036038101906101bb9190610f23565b6103c1565b005b6101dc60048036038101906101d79190611040565b6103d7565b005b6101f860048036038101906101f3919061106b565b6103e4565b6040516102059190610fa3565b60405180910390f35b610216610429565b005b61022061043c565b60405161022d91906110a5565b60405180910390f35b61023e610464565b60405161024b9190610e72565b60405180910390f35b61026e60048036038101906102699190610f23565b6104f4565b60405161027b9190610f7b565b60405180910390f35b61029e600480360381019061029991906110be565b610516565b6040516102ab9190610fa3565b60405180910390f35b6102ce60048036038101906102c9919061106b565b610598565b005b6060600380546102df90611129565b80601f016020809104026020016040519081016040528092919081815260200182805461030b90611129565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f8061036a61061c565b9050610377818585610623565b600191505092915050565b5f600254905090565b5f8061039561061c565b90506103a2858285610635565b6103ad8585856106c8565b60019150509392505050565b5f6012905090565b6103c96107b8565b6103d3828261083f565b5050565b6103e133826108be565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104316107b8565b61043a5f61093d565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461047390611129565b80601f016020809104026020016040519081016040528092919081815260200182805461049f90611129565b80156104ea5780601f106104c1576101008083540402835291602001916104ea565b820191905f5260205f20905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905090565b5f806104fe61061c565b905061050b8185856106c8565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6105a06107b8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610610575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161060791906110a5565b60405180910390fd5b6106198161093d565b50565b5f33905090565b6106308383836001610a00565b505050565b5f6106408484610516565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106c257818110156106b3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106aa93929190611159565b60405180910390fd5b6106c184848484035f610a00565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610738575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161072f91906110a5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a8575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161079f91906110a5565b60405180910390fd5b6107b3838383610bcf565b505050565b6107c061061c565b73ffffffffffffffffffffffffffffffffffffffff166107de61043c565b73ffffffffffffffffffffffffffffffffffffffff161461083d5761080161061c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161083491906110a5565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108af575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108a691906110a5565b60405180910390fd5b6108ba5f8383610bcf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092e575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161092591906110a5565b60405180910390fd5b610939825f83610bcf565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a70575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a6791906110a5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ae0575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ad791906110a5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bc9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bc09190610fa3565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1f578060025f828254610c1391906111bb565b92505081905550610ced565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ca8578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c9f93929190611159565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d34578060025f8282540392505081905550610d7e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ddb9190610fa3565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610e1f578082015181840152602081019050610e04565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610e4482610de8565b610e4e8185610df2565b9350610e5e818560208601610e02565b610e6781610e2a565b840191505092915050565b5f6020820190508181035f830152610e8a8184610e3a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ebf82610e96565b9050919050565b610ecf81610eb5565b8114610ed9575f80fd5b50565b5f81359050610eea81610ec6565b92915050565b5f819050919050565b610f0281610ef0565b8114610f0c575f80fd5b50565b5f81359050610f1d81610ef9565b92915050565b5f8060408385031215610f3957610f38610e92565b5b5f610f4685828601610edc565b9250506020610f5785828601610f0f565b9150509250929050565b5f8115159050919050565b610f7581610f61565b82525050565b5f602082019050610f8e5f830184610f6c565b92915050565b610f9d81610ef0565b82525050565b5f602082019050610fb65f830184610f94565b92915050565b5f805f60608486031215610fd357610fd2610e92565b5b5f610fe086828701610edc565b9350506020610ff186828701610edc565b925050604061100286828701610f0f565b9150509250925092565b5f60ff82169050919050565b6110218161100c565b82525050565b5f60208201905061103a5f830184611018565b92915050565b5f6020828403121561105557611054610e92565b5b5f61106284828501610f0f565b91505092915050565b5f602082840312156110805761107f610e92565b5b5f61108d84828501610edc565b91505092915050565b61109f81610eb5565b82525050565b5f6020820190506110b85f830184611096565b92915050565b5f80604083850312156110d4576110d3610e92565b5b5f6110e185828601610edc565b92505060206110f285828601610edc565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061114057607f821691505b602082108103611153576111526110fc565b5b50919050565b5f60608201905061116c5f830186611096565b6111796020830185610f94565b6111866040830184610f94565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111c582610ef0565b91506111d083610ef0565b92508282019050808211156111e8576111e761118e565b5b9291505056fea2646970667358221220559251cacb588391baf4da7737ceaa51883cf0ac3ad3f58c0276e49722a9053264736f6c63430008140033";

type CarbonCreditConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CarbonCreditConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CarbonCredit__factory extends ContractFactory {
  constructor(...args: CarbonCreditConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CarbonCredit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CarbonCredit__factory {
    return super.connect(runner) as CarbonCredit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CarbonCreditInterface {
    return new Interface(_abi) as CarbonCreditInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CarbonCredit {
    return new Contract(address, _abi, runner) as unknown as CarbonCredit;
  }
}
